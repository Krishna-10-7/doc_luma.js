/*!
 * LumaJS v0.3.0
 * (c) 2025 LumaJS Team
 * @license MIT
 */
!function(t){"function"==typeof define&&define.amd?define(t):t()}(function(){"use strict";
/*!
   * Luma3D v0.3.0 - 3D Engine
   * Three.js-like 3D rendering for LumaJS
   * @license MIT
   */!function(t){const i={identity:()=>[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],perspective(t,i,e,s){const r=1/Math.tan(t/2),n=1/(e-s);return[r/i,0,0,0,0,r,0,0,0,0,(s+e)*n,-1,0,0,2*s*e*n,0]},lookAt(t,i,e){const s=this.normalize([t[0]-i[0],t[1]-i[1],t[2]-i[2]]),r=this.normalize(this.cross(e,s)),n=this.cross(s,r);return[r[0],n[0],s[0],0,r[1],n[1],s[1],0,r[2],n[2],s[2],0,-this.dot(r,t),-this.dot(n,t),-this.dot(s,t),1]},multiply(t,i){const e=[];for(let s=0;s<4;s++)for(let r=0;r<4;r++){let n=0;for(let e=0;e<4;e++)n+=t[4*s+e]*i[4*e+r];e[4*s+r]=n}return e},translate:(t,i,e)=>[1,0,0,0,0,1,0,0,0,0,1,0,t,i,e,1],rotate(t,i){const e=Math.cos(t),s=Math.sin(t),r=1-e,[n,o,a]=this.normalize(i);return[r*n*n+e,r*n*o+a*s,r*n*a-o*s,0,r*n*o-a*s,r*o*o+e,r*o*a+n*s,0,r*n*a+o*s,r*o*a-n*s,r*a*a+e,0,0,0,0,1]},scale:(t,i,e)=>[t,0,0,0,0,i,0,0,0,0,e,0,0,0,0,1],normalize(t){const i=Math.sqrt(t[0]*t[0]+t[1]*t[1]+t[2]*t[2]);return i>0?[t[0]/i,t[1]/i,t[2]/i]:t},cross:(t,i)=>[t[1]*i[2]-t[2]*i[1],t[2]*i[0]-t[0]*i[2],t[0]*i[1]-t[1]*i[0]],dot:(t,i)=>t[0]*i[0]+t[1]*i[1]+t[2]*i[2]},e={basic:{vertex:"\n        attribute vec3 position;\n        uniform mat4 modelMatrix;\n        uniform mat4 viewMatrix;\n        uniform mat4 projectionMatrix;\n        \n        void main() {\n          gl_Position = projectionMatrix * viewMatrix * modelMatrix * vec4(position, 1.0);\n        }\n      ",fragment:"\n        precision mediump float;\n        uniform vec3 color;\n        \n        void main() {\n          gl_FragColor = vec4(color, 1.0);\n        }\n      "},phong:{vertex:"\n        attribute vec3 position;\n        attribute vec3 normal;\n        \n        uniform mat4 modelMatrix;\n        uniform mat4 viewMatrix;\n        uniform mat4 projectionMatrix;\n        uniform mat4 normalMatrix;\n        \n        varying vec3 vNormal;\n        varying vec3 vPosition;\n        \n        void main() {\n          vNormal = (normalMatrix * vec4(normal, 0.0)).xyz;\n          vec4 worldPosition = modelMatrix * vec4(position, 1.0);\n          vPosition = worldPosition.xyz;\n          gl_Position = projectionMatrix * viewMatrix * worldPosition;\n        }\n      ",fragment:"\n        precision mediump float;\n        \n        uniform vec3 color;\n        uniform vec3 lightPosition;\n        uniform vec3 lightColor;\n        uniform vec3 ambientLight;\n        uniform vec3 cameraPosition;\n        \n        varying vec3 vNormal;\n        varying vec3 vPosition;\n        \n        void main() {\n          vec3 normal = normalize(vNormal);\n          vec3 lightDir = normalize(lightPosition - vPosition);\n          vec3 viewDir = normalize(cameraPosition - vPosition);\n          vec3 reflectDir = reflect(-lightDir, normal);\n          \n          // Ambient\n          vec3 ambient = ambientLight * color;\n          \n          // Diffuse\n          float diff = max(dot(normal, lightDir), 0.0);\n          vec3 diffuse = diff * lightColor * color;\n          \n          // Specular\n          float spec = pow(max(dot(viewDir, reflectDir), 0.0), 32.0);\n          vec3 specular = spec * lightColor * 0.5;\n          \n          vec3 result = ambient + diffuse + specular;\n          gl_FragColor = vec4(result, 1.0);\n        }\n      "}};class s{constructor(t=[1,1,1],i=1){this.color=t.map(t=>t*i)}}class r extends s{constructor(t,i){super(t,i)}}class n extends s{constructor(t,i){super(t,i),this.position=[0,10,10]}}const o={Scene:class{constructor(){this.children=[],this.lights={ambient:new r([.2,.2,.2],1),directional:new n([1,1,1],.8)}}add(t){this.children.push(t)}remove(t){const i=this.children.indexOf(t);i>-1&&this.children.splice(i,1)}},PerspectiveCamera:class{constructor(t=75,i=1,e=.1,s=1e3){this.fov=t*Math.PI/180,this.aspect=i,this.near=e,this.far=s,this.position=[0,0,5],this.target=[0,0,0],this.up=[0,1,0]}getProjectionMatrix(){return i.perspective(this.fov,this.aspect,this.near,this.far)}getViewMatrix(){return i.lookAt(this.position,this.target,this.up)}lookAt(t,i,e){this.target=[t,i,e]}},WebGLRenderer:class{constructor(t={}){if(this.canvas=t.canvas||document.createElement("canvas"),this.width=t.width||800,this.height=t.height||600,this.canvas.width=this.width,this.canvas.height=this.height,this.gl=this.canvas.getContext("webgl")||this.canvas.getContext("experimental-webgl"),!this.gl)throw new Error("WebGL not supported");this.gl.enable(this.gl.DEPTH_TEST),this.gl.enable(this.gl.CULL_FACE),this.programs={},this.buffers=new WeakMap,this._initShaders()}_initShaders(){for(const[t,i]of Object.entries(e))this.programs[t]=this._createProgram(i.vertex,i.fragment)}_createShader(t,i){const e=this.gl.createShader(t);return this.gl.shaderSource(e,i),this.gl.compileShader(e),this.gl.getShaderParameter(e,this.gl.COMPILE_STATUS)?e:(console.error("Shader compile error:",this.gl.getShaderInfoLog(e)),this.gl.deleteShader(e),null)}_createProgram(t,i){const e=this._createShader(this.gl.VERTEX_SHADER,t),s=this._createShader(this.gl.FRAGMENT_SHADER,i),r=this.gl.createProgram();return this.gl.attachShader(r,e),this.gl.attachShader(r,s),this.gl.linkProgram(r),this.gl.getProgramParameter(r,this.gl.LINK_STATUS)?r:(console.error("Program link error:",this.gl.getProgramInfoLog(r)),null)}_setupBuffers(t){if(this.buffers.has(t))return this.buffers.get(t);const i={position:this.gl.createBuffer(),normal:this.gl.createBuffer(),index:this.gl.createBuffer()};return this.gl.bindBuffer(this.gl.ARRAY_BUFFER,i.position),this.gl.bufferData(this.gl.ARRAY_BUFFER,t.vertices,this.gl.STATIC_DRAW),t.normals&&(this.gl.bindBuffer(this.gl.ARRAY_BUFFER,i.normal),this.gl.bufferData(this.gl.ARRAY_BUFFER,t.normals,this.gl.STATIC_DRAW)),this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER,i.index),this.gl.bufferData(this.gl.ELEMENT_ARRAY_BUFFER,t.indices,this.gl.STATIC_DRAW),this.buffers.set(t,i),i}setSize(t,i){this.width=t,this.height=i,this.canvas.width=t,this.canvas.height=i,this.gl.viewport(0,0,t,i)}render(t,i){this.gl.clearColor(.1,.1,.1,1),this.gl.clear(this.gl.COLOR_BUFFER_BIT|this.gl.DEPTH_BUFFER_BIT);const e=i.getProjectionMatrix(),s=i.getViewMatrix();for(const r of t.children)r.visible&&this._renderMesh(r,e,s,i,t.lights)}_renderMesh(t,i,e,s,r){const n=this.programs[t.material.shaderType];this.gl.useProgram(n);const o=this._setupBuffers(t.geometry),a=t.getModelMatrix(),h=this.gl.getAttribLocation(n,"position");if(this.gl.bindBuffer(this.gl.ARRAY_BUFFER,o.position),this.gl.vertexAttribPointer(h,3,this.gl.FLOAT,!1,0,0),this.gl.enableVertexAttribArray(h),t.geometry.normals){const t=this.gl.getAttribLocation(n,"normal");t>=0&&(this.gl.bindBuffer(this.gl.ARRAY_BUFFER,o.normal),this.gl.vertexAttribPointer(t,3,this.gl.FLOAT,!1,0,0),this.gl.enableVertexAttribArray(t))}this._setUniform(n,"modelMatrix","Matrix4fv",a),this._setUniform(n,"viewMatrix","Matrix4fv",e),this._setUniform(n,"projectionMatrix","Matrix4fv",i),this._setUniform(n,"normalMatrix","Matrix4fv",a),this._setUniform(n,"color","3fv",t.material.color),"phong"===t.material.shaderType&&(this._setUniform(n,"lightPosition","3fv",r.directional.position),this._setUniform(n,"lightColor","3fv",r.directional.color),this._setUniform(n,"ambientLight","3fv",r.ambient.color),this._setUniform(n,"cameraPosition","3fv",s.position)),this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER,o.index),t.material.wireframe?this.gl.drawElements(this.gl.LINES,t.geometry.indices.length,this.gl.UNSIGNED_SHORT,0):this.gl.drawElements(this.gl.TRIANGLES,t.geometry.indices.length,this.gl.UNSIGNED_SHORT,0)}_setUniform(t,i,e,s){const r=this.gl.getUniformLocation(t,i);null!==r&&("Matrix4fv"===e?this.gl.uniformMatrix4fv(r,!1,s):"3fv"===e&&this.gl.uniform3fv(r,s))}},Mesh:class{constructor(t,i){this.geometry=t,this.material=i,this.position=[0,0,0],this.rotation=[0,0,0],this.scale=[1,1,1],this.visible=!0}getModelMatrix(){let t=i.identity();return t=i.multiply(t,i.translate(...this.position)),t=i.multiply(t,i.rotate(this.rotation[0],[1,0,0])),t=i.multiply(t,i.rotate(this.rotation[1],[0,1,0])),t=i.multiply(t,i.rotate(this.rotation[2],[0,0,1])),t=i.multiply(t,i.scale(...this.scale)),t}},BoxGeometry:class{constructor(t=1,i=1,e=1){const s=t/2,r=i/2,n=e/2;this.vertices=new Float32Array([-s,-r,n,s,-r,n,s,r,n,-s,r,n,-s,-r,-n,-s,r,-n,s,r,-n,s,-r,-n,-s,r,-n,-s,r,n,s,r,n,s,r,-n,-s,-r,-n,s,-r,-n,s,-r,n,-s,-r,n,s,-r,-n,s,r,-n,s,r,n,s,-r,n,-s,-r,-n,-s,-r,n,-s,r,n,-s,r,-n]),this.normals=new Float32Array([0,0,1,0,0,1,0,0,1,0,0,1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,1,0,0,1,0,0,1,0,0,1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,1,0,0,1,0,0,1,0,0,1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0]),this.indices=new Uint16Array([0,1,2,0,2,3,4,5,6,4,6,7,8,9,10,8,10,11,12,13,14,12,14,15,16,17,18,16,18,19,20,21,22,20,22,23])}},SphereGeometry:class{constructor(t=1,i=32,e=16){const s=[],r=[],n=[];for(let n=0;n<=e;n++){const o=n/e*Math.PI;for(let e=0;e<=i;e++){const n=e/i*Math.PI*2,a=-t*Math.cos(n)*Math.sin(o),h=t*Math.cos(o),l=t*Math.sin(n)*Math.sin(o);s.push(a,h,l);const c=Math.sqrt(a*a+h*h+l*l);r.push(a/c,h/c,l/c)}}for(let t=0;t<e;t++)for(let e=0;e<i;e++){const s=t*(i+1)+e,r=s+i+1;n.push(s,r,s+1),n.push(r,r+1,s+1)}this.vertices=new Float32Array(s),this.normals=new Float32Array(r),this.indices=new Uint16Array(n)}},PlaneGeometry:class{constructor(t=1,i=1){const e=t/2,s=i/2;this.vertices=new Float32Array([-e,-s,0,e,-s,0,e,s,0,-e,s,0]),this.normals=new Float32Array([0,0,1,0,0,1,0,0,1,0,0,1]),this.indices=new Uint16Array([0,1,2,0,2,3])}},Material:class{constructor(t={}){this.color=t.color||[1,1,1],this.wireframe=t.wireframe||!1,this.shaderType=t.shaderType||"phong"}},AmbientLight:r,DirectionalLight:n,PointLight:class extends s{constructor(t,i,e=0){super(t,i),this.position=[0,0,0],this.distance=e}},OrbitControls:class{constructor(t,i){this.camera=t,this.canvas=i,this.radius=5,this.theta=0,this.phi=Math.PI/4,this.autoRotate=!1,this.autoRotateSpeed=.01,this._setupEventListeners(),this.update()}_setupEventListeners(){let t=!1,i=0,e=0;this.canvas.addEventListener("mousedown",s=>{t=!0,i=s.clientX,e=s.clientY}),this.canvas.addEventListener("mousemove",s=>{if(!t)return;const r=s.clientX-i,n=s.clientY-e;this.theta+=.01*r,this.phi=Math.max(.1,Math.min(Math.PI-.1,this.phi+.01*n)),i=s.clientX,e=s.clientY,this.update()}),this.canvas.addEventListener("mouseup",()=>{t=!1}),this.canvas.addEventListener("wheel",t=>{t.preventDefault(),this.radius=Math.max(2,Math.min(20,this.radius+.01*t.deltaY)),this.update()})}update(){this.autoRotate&&(this.theta+=this.autoRotateSpeed),this.camera.position=[this.radius*Math.sin(this.phi)*Math.cos(this.theta),this.radius*Math.cos(this.phi),this.radius*Math.sin(this.phi)*Math.sin(this.theta)],this.camera.lookAt(0,0,0)}},Matrix4:i,version:"0.3.0"};"undefined"!=typeof module&&module.exports?module.exports=o:t.Luma3D=o}("undefined"!=typeof window?window:globalThis)});
//# sourceMappingURL=luma-3d.min.js.map
